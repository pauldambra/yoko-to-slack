service: poll-for-toots

frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  lambdaHashingVersion: 20201221
  logRetentionInDays: 5
  tracing:
    lambda: true
  architecture: arm64
  environment:
    TWITTER_BEARER_TOKEN: ${env:BEARER}
    DYNAMO_TABLE_NAME: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ YokoToSlackTable, Arn ]
custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  tableName: ${self:custom.stage}-yoko-to-slack

functions:
  rateHandler:
    handler: handler.run
    events:
      - schedule: rate(5 minutes)

resources:
  Resources:
    YokoToSlackTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: type
            AttributeType: S
        KeySchema:
          -
            AttributeName: type
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

Outputs:
  YokoToSlackTableARN:
    Description: The ARN for the Dynamo Table
    Value:
      'Fn::GetAtt': [YokoToSlackTable, Arn]
    Export:
      Name: ${self:service}:${self:custom.stage}:YokoToSlackTableARN